(function() {var implementors = {};
implementors["tokio_util"] = [{text:"impl&lt;T, I, U&gt; <a class=\"trait\" href=\"https://docs.rs/futures-sink/0.3.0/futures_sink/trait.Sink.html\" title=\"trait futures_sink::Sink\">Sink</a>&lt;I&gt; for <a class=\"struct\" href=\"tokio_util/codec/struct.Framed.html\" title=\"struct tokio_util::codec::Framed\">Framed</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"tokio/io/async_write/trait.AsyncWrite.html\" title=\"trait tokio::io::async_write::AsyncWrite\">AsyncWrite</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: <a class=\"trait\" href=\"tokio_util/codec/trait.Encoder.html\" title=\"trait tokio_util::codec::Encoder\">Encoder</a>&lt;Item = I&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;U::<a class=\"type\" href=\"tokio_util/codec/trait.Encoder.html#associatedtype.Error\" title=\"type tokio_util::codec::Encoder::Error\">Error</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;,&nbsp;</span>",synthetic:false,types:["tokio_util::codec::framed::Framed"]},{text:"impl&lt;T, I, D&gt; <a class=\"trait\" href=\"https://docs.rs/futures-sink/0.3.0/futures_sink/trait.Sink.html\" title=\"trait futures_sink::Sink\">Sink</a>&lt;I&gt; for <a class=\"struct\" href=\"tokio_util/codec/struct.FramedRead.html\" title=\"struct tokio_util::codec::FramedRead\">FramedRead</a>&lt;T, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://docs.rs/futures-sink/0.3.0/futures_sink/trait.Sink.html\" title=\"trait futures_sink::Sink\">Sink</a>&lt;I&gt;,&nbsp;</span>",synthetic:false,types:["tokio_util::codec::framed_read::FramedRead"]},{text:"impl&lt;T, I, E&gt; <a class=\"trait\" href=\"https://docs.rs/futures-sink/0.3.0/futures_sink/trait.Sink.html\" title=\"trait futures_sink::Sink\">Sink</a>&lt;I&gt; for <a class=\"struct\" href=\"tokio_util/codec/struct.FramedWrite.html\" title=\"struct tokio_util::codec::FramedWrite\">FramedWrite</a>&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"tokio/io/async_write/trait.AsyncWrite.html\" title=\"trait tokio::io::async_write::AsyncWrite\">AsyncWrite</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: <a class=\"trait\" href=\"tokio_util/codec/trait.Encoder.html\" title=\"trait tokio_util::codec::Encoder\">Encoder</a>&lt;Item = I&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;E::<a class=\"type\" href=\"tokio_util/codec/trait.Encoder.html#associatedtype.Error\" title=\"type tokio_util::codec::Encoder::Error\">Error</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;,&nbsp;</span>",synthetic:false,types:["tokio_util::codec::framed_write::FramedWrite"]},{text:"impl&lt;C:&nbsp;<a class=\"trait\" href=\"tokio_util/codec/trait.Encoder.html\" title=\"trait tokio_util::codec::Encoder\">Encoder</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>&gt; <a class=\"trait\" href=\"https://docs.rs/futures-sink/0.3.0/futures_sink/trait.Sink.html\" title=\"trait futures_sink::Sink\">Sink</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>&lt;C as <a class=\"trait\" href=\"tokio_util/codec/trait.Encoder.html\" title=\"trait tokio_util::codec::Encoder\">Encoder</a>&gt;::<a class=\"type\" href=\"tokio_util/codec/trait.Encoder.html#associatedtype.Item\" title=\"type tokio_util::codec::Encoder::Item\">Item</a>, <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/std/net/addr/enum.SocketAddr.html\" title=\"enum std::net::addr::SocketAddr\">SocketAddr</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt; for <a class=\"struct\" href=\"tokio_util/udp/struct.UdpFramed.html\" title=\"struct tokio_util::udp::UdpFramed\">UdpFramed</a>&lt;C&gt;",synthetic:false,types:["tokio_util::udp::frame::UdpFramed"]},];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        })()